#include <LiquidCrystal_I2C.h> // Library for LCD
LiquidCrystal_I2C lcd = LiquidCrystal_I2C(0x27, 16, 2);

// constants won't change
const int TRIG_PIN = 6; // Arduino pin connected to Ultrasonic Sensor's TRIG pin
const int ECHO_PIN = 7; // Arduino pin connected to Ultrasonic Sensor's ECHO pin
const int DISTANCE_THRESHOLD = 20; // centimeters
int redPin=11;
int greenPin=10;
int bluePin=9;

// variables will change:
float duration_us, distance_cm;

void setup() {
  Serial.begin (9600);       // initialize serial port
  pinMode(TRIG_PIN, OUTPUT); // set arduino pin to output mode
  pinMode(ECHO_PIN, INPUT);  // set arduino pin to input mode
  pinMode(redPin,OUTPUT);
  pinMode(greenPin,OUTPUT);
  pinMode(bluePin,OUTPUT);
  lcd.init();
  lcd.backlight();
}

void loop() {
  // generate 10-microsecond pulse to TRIG pin
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(50);
  digitalWrite(TRIG_PIN, LOW);

  // measure duration of pulse from ECHO pin
  duration_us = pulseIn(ECHO_PIN, HIGH);
  // calculate the distance
  distance_cm = 0.017 * duration_us;

  if(distance_cm <= DISTANCE_THRESHOLD)
    analogWrite(redPin,255);
   else
    analogWrite(redPin,0);

  if(distance_cm >= DISTANCE_THRESHOLD)
    analogWrite(greenPin,255);
   else
    analogWrite(greenPin,0);
    
  if(distance_cm <= DISTANCE_THRESHOLD)
    lcd.setCursor(4, 0);
    lcd.print("CLOSED");
  
  if(distance_cm >= DISTANCE_THRESHOLD)
     lcd.clear();
     lcd.setCursor(4, 0);
     lcd.print("OPEN");


  // print the value to Serial Monitor
  Serial.print("distance: ");
  Serial.print(distance_cm);
  Serial.println(" cm");

  delay(500);
